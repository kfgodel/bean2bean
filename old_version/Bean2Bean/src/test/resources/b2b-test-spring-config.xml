<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-2.0.xsd 
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.1.xsd ">


 	<bean id="b2bcreator" class="net.sf.kfgodel.bean2bean.Bean2Bean" scope="singleton">
 		<property name="metadataExtractor">
 			<bean class="net.sf.kfgodel.bean2bean.population.metadata.AnnotatedFieldsMetadaExtractor" />
 		</property>
		<property name="typeConverter" ref="b2bconverter" />
	</bean>
	
	<bean id="b2bconverter" class="net.sf.kfgodel.bean2bean.conversion.DefaultTypeConverter" scope="singleton">
		<property name="objectFactory">
			<bean class="net.sf.kfgodel.bean2bean.instantiation.EmptyConstructorObjectFactory"></bean>
		</property>
		<property name="bulkConverters">
			<!-- El orden de los elementos importa! para los generales -->
			<list>
				<!-- Conversion de enums -->
				<bean class="net.sf.kfgodel.bean2bean.conversion.spring.SpecializedConverterRegistration">
					<property name="sourceType" value="java.lang.Enum" />
					<property name="destinationType" value="java.lang.String" />
					<property name="converter" >
						<bean class="net.sf.kfgodel.bean2bean.conversion.converters.Enum2StringConverter" />
					</property>
				</bean>
				<bean class="net.sf.kfgodel.bean2bean.conversion.spring.SpecializedConverterRegistration">
					<property name="sourceType" value="java.lang.String" />
					<property name="destinationType" value="java.lang.Enum" />
					<property name="converter" >
						<bean class="net.sf.kfgodel.bean2bean.conversion.converters.String2EnumConverter" />
					</property>
				</bean>
				<bean class="net.sf.kfgodel.bean2bean.conversion.spring.SpecializedConverterRegistration">
					<property name="sourceType" value="java.lang.Number" />
					<property name="destinationType" value="java.lang.Enum" />
					<property name="converter" >
						<bean class="net.sf.kfgodel.bean2bean.conversion.converters.Number2EnumConverter" />
					</property>
				</bean>
				<bean class="net.sf.kfgodel.bean2bean.conversion.spring.SpecializedConverterRegistration">
					<property name="sourceType" value="java.lang.Enum" />
					<property name="destinationType" value="java.lang.Number" />
					<property name="converter" ref="enum2NumberConverter" />
				</bean>
				<bean class="net.sf.kfgodel.bean2bean.conversion.spring.SpecializedConverterRegistration">
					<property name="registrationName"  value="Enum2intConverter"/>
					<property name="sourceType" value="java.lang.Enum" />
					<property name="destinationType" ref="intPrimitiveType" />
					<property name="converter" ref="enum2NumberConverter" />
				</bean>

				<!-- Conversor para Strings -->
				<bean class="net.sf.kfgodel.bean2bean.conversion.spring.SpecializedConverterRegistration">
					<property name="sourceType" value="java.lang.String" />
					<property name="destinationType" value="java.lang.Number" />
					<property name="converter" >
						<bean class="net.sf.kfgodel.bean2bean.conversion.converters.String2NumberConverter" />
					</property>
				</bean>

				<!-- Conversor para colecciones -->
				<bean class="net.sf.kfgodel.bean2bean.conversion.spring.SpecializedConverterRegistration">
					<property name="sourceType" value="java.util.Collection" />
					<property name="destinationType" value="java.util.Collection" />
					<property name="converter" >
						<bean class="net.sf.kfgodel.bean2bean.conversion.converters.Collection2CollectionConverter" >
							<property name="baseConverter" ref="b2bconverter"/>
						</bean>
					</property>
				</bean>

				<!-- Conversor para TOs -->
				<bean class="net.sf.kfgodel.bean2bean.conversion.converters.AnnotatedClassConverter" >
					<property name="beanGenerator" ref="b2bcreator"/>
				</bean>

				<!-- Conversor para arrays  -->
				<bean class="net.sf.kfgodel.bean2bean.conversion.converters.ArrayCollectionConverter">
					<property name="baseConverter" ref="b2bconverter" />
				</bean>
				<bean class="net.sf.kfgodel.bean2bean.conversion.converters.ArrayArrayConverter" >
					<property name="baseConverter" ref="b2bconverter" />
				</bean>

				<!--  Conversor para tipos compatibles (asignables directamente)
						este conversor debe ser uno de los ultimos, antes del de xwork
						para asegurar la identidad de los tipos compatibles  -->
				<bean class="net.sf.kfgodel.bean2bean.conversion.converters.PolymorphismConverter" />

				<!-- Conversor para String utilizando JSON
					 Este conversor esta despues del polimorfico para no convertir cadenas
					 Si no es necesario, impidiendo la conversion directa de Strings a
					 formato JSON!  -->
				<bean class="net.sf.kfgodel.bean2bean.conversion.converters.JsonStringObjectConverter" />

				<!-- Conversor general de tipos basicos  -->
				<bean class="net.sf.kfgodel.bean2bean.conversion.converters.WrappedXWorkConverter" />
				
				<!-- Conversor opcional usado por nombre  -->
				<bean class="net.sf.kfgodel.bean2bean.conversion.converters.FormatterConverter" />
				
				<!-- Testea el conversor no estandar -->
				<bean class="net.sf.kfgodel.bean2bean.conversion.spring.SpecializedConverterRegistration">
					<property name="sourceType" value="java.lang.Object" />
					<property name="destinationType" value="java.lang.Class" />
					<property name="converter" >
						<bean class="net.sf.kfgodel.bean2bean.testconverter.SpecializedTestConverter" />
					</property>
				</bean>
				
				
			</list>
		</property>
	</bean>              

	<bean id="enum2NumberConverter" class="net.sf.kfgodel.bean2bean.conversion.converters.Enum2NumberConverter" />
	<bean id="intPrimitiveType" class="net.sf.kfgodel.bean2bean.conversion.spring.PrimitiveTypesBeans" factory-method="getIntPrimitiveType"/> 
     
</beans>
